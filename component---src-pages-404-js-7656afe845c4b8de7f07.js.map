{"version":3,"file":"component---src-pages-404-js-7656afe845c4b8de7f07.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/CursorContext.js","webpack://gatsby-starter-default/./node_modules/lenis/dist/lenis.mjs","webpack://gatsby-starter-default/./src/components/Cursor.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/use-will-change/get-will-change-name.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/use-will-change/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://gatsby-starter-default/./src/pages/404.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nexport const CursorContext = createContext();\r\n\r\nexport const CursorProvider = ({ children }) => {\r\n  const [hovering, setHovering] = useState(false);\r\n\r\n  return (\r\n    <CursorContext.Provider value={{ hovering, setHovering }}>\r\n      {children}\r\n    </CursorContext.Provider>\r\n  );\r\n};\r\n","function clamp(t,i,e){return Math.max(t,Math.min(i,e))}class Animate{constructor(){this.isRunning=!1,this.value=0,this.from=0,this.to=0,this.duration=0,this.currentTime=0}advance(t){var i;if(!this.isRunning)return;let e=!1;if(this.duration&&this.easing){this.currentTime+=t;const i=clamp(0,this.currentTime/this.duration,1);e=i>=1;const s=e?1:this.easing(i);this.value=this.from+(this.to-this.from)*s}else this.lerp?(this.value=function damp(t,i,e,s){return function lerp(t,i,e){return(1-e)*t+e*i}(t,i,1-Math.exp(-e*s))}(this.value,this.to,60*this.lerp,t),Math.round(this.value)===this.to&&(this.value=this.to,e=!0)):(this.value=this.to,e=!0);e&&this.stop(),null===(i=this.onUpdate)||void 0===i||i.call(this,this.value,e)}stop(){this.isRunning=!1}fromTo(t,i,{lerp:e,duration:s,easing:o,onStart:n,onUpdate:l}){this.from=this.value=t,this.to=i,this.lerp=e,this.duration=s,this.easing=o,this.currentTime=0,this.isRunning=!0,null==n||n(),this.onUpdate=l}}class Dimensions{constructor({wrapper:t,content:i,autoResize:e=!0,debounce:s=250}={}){this.width=0,this.height=0,this.scrollWidth=0,this.scrollHeight=0,this.resize=()=>{this.onWrapperResize(),this.onContentResize()},this.onWrapperResize=()=>{this.wrapper===window?(this.width=window.innerWidth,this.height=window.innerHeight):this.wrapper instanceof HTMLElement&&(this.width=this.wrapper.clientWidth,this.height=this.wrapper.clientHeight)},this.onContentResize=()=>{this.wrapper===window?(this.scrollHeight=this.content.scrollHeight,this.scrollWidth=this.content.scrollWidth):this.wrapper instanceof HTMLElement&&(this.scrollHeight=this.wrapper.scrollHeight,this.scrollWidth=this.wrapper.scrollWidth)},this.wrapper=t,this.content=i,e&&(this.debouncedResize=function debounce(t,i){let e;return function(){let s=arguments,o=this;clearTimeout(e),e=setTimeout((function(){t.apply(o,s)}),i)}}(this.resize,s),this.wrapper===window?window.addEventListener(\"resize\",this.debouncedResize,!1):(this.wrapperResizeObserver=new ResizeObserver(this.debouncedResize),this.wrapperResizeObserver.observe(this.wrapper)),this.contentResizeObserver=new ResizeObserver(this.debouncedResize),this.contentResizeObserver.observe(this.content)),this.resize()}destroy(){var t,i;null===(t=this.wrapperResizeObserver)||void 0===t||t.disconnect(),null===(i=this.contentResizeObserver)||void 0===i||i.disconnect(),window.removeEventListener(\"resize\",this.debouncedResize,!1)}get limit(){return{x:this.scrollWidth-this.width,y:this.scrollHeight-this.height}}}class Emitter{constructor(){this.events={}}emit(t,...i){let e=this.events[t]||[];for(let t=0,s=e.length;t<s;t++)e[t](...i)}on(t,i){var e;return(null===(e=this.events[t])||void 0===e?void 0:e.push(i))||(this.events[t]=[i]),()=>{var e;this.events[t]=null===(e=this.events[t])||void 0===e?void 0:e.filter((t=>i!==t))}}off(t,i){var e;this.events[t]=null===(e=this.events[t])||void 0===e?void 0:e.filter((t=>i!==t))}destroy(){this.events={}}}const t=100/6;class VirtualScroll{constructor(i,{wheelMultiplier:e=1,touchMultiplier:s=1}){this.lastDelta={x:0,y:0},this.windowWidth=0,this.windowHeight=0,this.onTouchStart=t=>{const{clientX:i,clientY:e}=t.targetTouches?t.targetTouches[0]:t;this.touchStart.x=i,this.touchStart.y=e,this.lastDelta={x:0,y:0},this.emitter.emit(\"scroll\",{deltaX:0,deltaY:0,event:t})},this.onTouchMove=t=>{var i,e,s,o;const{clientX:n,clientY:l}=t.targetTouches?t.targetTouches[0]:t,r=-(n-(null!==(e=null===(i=this.touchStart)||void 0===i?void 0:i.x)&&void 0!==e?e:0))*this.touchMultiplier,h=-(l-(null!==(o=null===(s=this.touchStart)||void 0===s?void 0:s.y)&&void 0!==o?o:0))*this.touchMultiplier;this.touchStart.x=n,this.touchStart.y=l,this.lastDelta={x:r,y:h},this.emitter.emit(\"scroll\",{deltaX:r,deltaY:h,event:t})},this.onTouchEnd=t=>{this.emitter.emit(\"scroll\",{deltaX:this.lastDelta.x,deltaY:this.lastDelta.y,event:t})},this.onWheel=i=>{let{deltaX:e,deltaY:s,deltaMode:o}=i;e*=1===o?t:2===o?this.windowWidth:1,s*=1===o?t:2===o?this.windowHeight:1,e*=this.wheelMultiplier,s*=this.wheelMultiplier,this.emitter.emit(\"scroll\",{deltaX:e,deltaY:s,event:i})},this.onWindowResize=()=>{this.windowWidth=window.innerWidth,this.windowHeight=window.innerHeight},this.element=i,this.wheelMultiplier=e,this.touchMultiplier=s,this.touchStart={x:null,y:null},this.emitter=new Emitter,window.addEventListener(\"resize\",this.onWindowResize,!1),this.onWindowResize(),this.element.addEventListener(\"wheel\",this.onWheel,{passive:!1}),this.element.addEventListener(\"touchstart\",this.onTouchStart,{passive:!1}),this.element.addEventListener(\"touchmove\",this.onTouchMove,{passive:!1}),this.element.addEventListener(\"touchend\",this.onTouchEnd,{passive:!1})}on(t,i){return this.emitter.on(t,i)}destroy(){this.emitter.destroy(),window.removeEventListener(\"resize\",this.onWindowResize,!1),this.element.removeEventListener(\"wheel\",this.onWheel),this.element.removeEventListener(\"touchstart\",this.onTouchStart),this.element.removeEventListener(\"touchmove\",this.onTouchMove),this.element.removeEventListener(\"touchend\",this.onTouchEnd)}}class Lenis{constructor({wrapper:t=window,content:i=document.documentElement,wheelEventsTarget:e=t,eventsTarget:s=e,smoothWheel:o=!0,syncTouch:n=!1,syncTouchLerp:l=.075,touchInertiaMultiplier:r=35,duration:h,easing:a=(t=>Math.min(1,1.001-Math.pow(2,-10*t))),lerp:c=.1,infinite:d=!1,orientation:u=\"vertical\",gestureOrientation:p=\"vertical\",touchMultiplier:m=1,wheelMultiplier:v=1,autoResize:g=!0,prevent:w,virtualScroll:S,__experimental__naiveDimensions:f=!1}={}){this.__isScrolling=!1,this.__isStopped=!1,this.__isLocked=!1,this.userData={},this.lastVelocity=0,this.velocity=0,this.direction=0,this.onPointerDown=t=>{1===t.button&&this.reset()},this.onVirtualScroll=t=>{if(\"function\"==typeof this.options.virtualScroll&&!1===this.options.virtualScroll(t))return;const{deltaX:i,deltaY:e,event:s}=t;if(this.emitter.emit(\"virtual-scroll\",{deltaX:i,deltaY:e,event:s}),s.ctrlKey)return;const o=s.type.includes(\"touch\"),n=s.type.includes(\"wheel\");this.isTouching=\"touchstart\"===s.type||\"touchmove\"===s.type;if(this.options.syncTouch&&o&&\"touchstart\"===s.type&&!this.isStopped&&!this.isLocked)return void this.reset();const l=0===i&&0===e,r=\"vertical\"===this.options.gestureOrientation&&0===e||\"horizontal\"===this.options.gestureOrientation&&0===i;if(l||r)return;let h=s.composedPath();h=h.slice(0,h.indexOf(this.rootElement));const a=this.options.prevent;if(h.find((t=>{var i,e,s,l,r;return t instanceof Element&&(\"function\"==typeof a&&(null==a?void 0:a(t))||(null===(i=t.hasAttribute)||void 0===i?void 0:i.call(t,\"data-lenis-prevent\"))||o&&(null===(e=t.hasAttribute)||void 0===e?void 0:e.call(t,\"data-lenis-prevent-touch\"))||n&&(null===(s=t.hasAttribute)||void 0===s?void 0:s.call(t,\"data-lenis-prevent-wheel\"))||(null===(l=t.classList)||void 0===l?void 0:l.contains(\"lenis\"))&&!(null===(r=t.classList)||void 0===r?void 0:r.contains(\"lenis-stopped\")))})))return;if(this.isStopped||this.isLocked)return void s.preventDefault();if(!(this.options.syncTouch&&o||this.options.smoothWheel&&n))return this.isScrolling=\"native\",void this.animate.stop();s.preventDefault();let c=e;\"both\"===this.options.gestureOrientation?c=Math.abs(e)>Math.abs(i)?e:i:\"horizontal\"===this.options.gestureOrientation&&(c=i);const d=o&&this.options.syncTouch,u=o&&\"touchend\"===s.type&&Math.abs(c)>5;u&&(c=this.velocity*this.options.touchInertiaMultiplier),this.scrollTo(this.targetScroll+c,Object.assign({programmatic:!1},d?{lerp:u?this.options.syncTouchLerp:1}:{lerp:this.options.lerp,duration:this.options.duration,easing:this.options.easing}))},this.onNativeScroll=()=>{if(clearTimeout(this.__resetVelocityTimeout),delete this.__resetVelocityTimeout,this.__preventNextNativeScrollEvent)delete this.__preventNextNativeScrollEvent;else if(!1===this.isScrolling||\"native\"===this.isScrolling){const t=this.animatedScroll;this.animatedScroll=this.targetScroll=this.actualScroll,this.lastVelocity=this.velocity,this.velocity=this.animatedScroll-t,this.direction=Math.sign(this.animatedScroll-t),this.isScrolling=\"native\",this.emit(),0!==this.velocity&&(this.__resetVelocityTimeout=setTimeout((()=>{this.lastVelocity=this.velocity,this.velocity=0,this.isScrolling=!1,this.emit()}),400))}},window.lenisVersion=\"1.1.6\",t&&t!==document.documentElement&&t!==document.body||(t=window),this.options={wrapper:t,content:i,wheelEventsTarget:e,eventsTarget:s,smoothWheel:o,syncTouch:n,syncTouchLerp:l,touchInertiaMultiplier:r,duration:h,easing:a,lerp:c,infinite:d,gestureOrientation:p,orientation:u,touchMultiplier:m,wheelMultiplier:v,autoResize:g,prevent:w,virtualScroll:S,__experimental__naiveDimensions:f},this.animate=new Animate,this.emitter=new Emitter,this.dimensions=new Dimensions({wrapper:t,content:i,autoResize:g}),this.updateClassName(),this.userData={},this.time=0,this.velocity=this.lastVelocity=0,this.isLocked=!1,this.isStopped=!1,this.isScrolling=!1,this.targetScroll=this.animatedScroll=this.actualScroll,this.options.wrapper.addEventListener(\"scroll\",this.onNativeScroll,!1),this.options.wrapper.addEventListener(\"pointerdown\",this.onPointerDown,!1),this.virtualScroll=new VirtualScroll(s,{touchMultiplier:m,wheelMultiplier:v}),this.virtualScroll.on(\"scroll\",this.onVirtualScroll)}destroy(){this.emitter.destroy(),this.options.wrapper.removeEventListener(\"scroll\",this.onNativeScroll,!1),this.options.wrapper.removeEventListener(\"pointerdown\",this.onPointerDown,!1),this.virtualScroll.destroy(),this.dimensions.destroy(),this.cleanUpClassName()}on(t,i){return this.emitter.on(t,i)}off(t,i){return this.emitter.off(t,i)}setScroll(t){this.isHorizontal?this.rootElement.scrollLeft=t:this.rootElement.scrollTop=t}resize(){this.dimensions.resize()}emit(){this.emitter.emit(\"scroll\",this)}reset(){this.isLocked=!1,this.isScrolling=!1,this.animatedScroll=this.targetScroll=this.actualScroll,this.lastVelocity=this.velocity=0,this.animate.stop()}start(){this.isStopped&&(this.isStopped=!1,this.reset())}stop(){this.isStopped||(this.isStopped=!0,this.animate.stop(),this.reset())}raf(t){const i=t-(this.time||t);this.time=t,this.animate.advance(.001*i)}scrollTo(t,{offset:i=0,immediate:e=!1,lock:s=!1,duration:o=this.options.duration,easing:n=this.options.easing,lerp:l=this.options.lerp,onStart:r,onComplete:h,force:a=!1,programmatic:c=!0,userData:d={}}={}){if(!this.isStopped&&!this.isLocked||a){if(\"string\"==typeof t&&[\"top\",\"left\",\"start\"].includes(t))t=0;else if(\"string\"==typeof t&&[\"bottom\",\"right\",\"end\"].includes(t))t=this.limit;else{let e;if(\"string\"==typeof t?e=document.querySelector(t):t instanceof HTMLElement&&(null==t?void 0:t.nodeType)&&(e=t),e){if(this.options.wrapper!==window){const t=this.rootElement.getBoundingClientRect();i-=this.isHorizontal?t.left:t.top}const s=e.getBoundingClientRect();t=(this.isHorizontal?s.left:s.top)+this.animatedScroll}}if(\"number\"==typeof t&&(t+=i,t=Math.round(t),this.options.infinite?c&&(this.targetScroll=this.animatedScroll=this.scroll):t=clamp(0,t,this.limit),t!==this.targetScroll)){if(this.userData=d,e)return this.animatedScroll=this.targetScroll=t,this.setScroll(this.scroll),this.reset(),this.preventNextNativeScrollEvent(),this.emit(),null==h||h(this),void(this.userData={});c||(this.targetScroll=t),this.animate.fromTo(this.animatedScroll,t,{duration:o,easing:n,lerp:l,onStart:()=>{s&&(this.isLocked=!0),this.isScrolling=\"smooth\",null==r||r(this)},onUpdate:(t,i)=>{this.isScrolling=\"smooth\",this.lastVelocity=this.velocity,this.velocity=t-this.animatedScroll,this.direction=Math.sign(this.velocity),this.animatedScroll=t,this.setScroll(this.scroll),c&&(this.targetScroll=t),i||this.emit(),i&&(this.reset(),this.emit(),null==h||h(this),this.userData={},this.preventNextNativeScrollEvent())}})}}}preventNextNativeScrollEvent(){this.__preventNextNativeScrollEvent=!0,requestAnimationFrame((()=>{delete this.__preventNextNativeScrollEvent}))}get rootElement(){return this.options.wrapper===window?document.documentElement:this.options.wrapper}get limit(){return this.options.__experimental__naiveDimensions?this.isHorizontal?this.rootElement.scrollWidth-this.rootElement.clientWidth:this.rootElement.scrollHeight-this.rootElement.clientHeight:this.dimensions.limit[this.isHorizontal?\"x\":\"y\"]}get isHorizontal(){return\"horizontal\"===this.options.orientation}get actualScroll(){return this.isHorizontal?this.rootElement.scrollLeft:this.rootElement.scrollTop}get scroll(){return this.options.infinite?function modulo(t,i){return(t%i+i)%i}(this.animatedScroll,this.limit):this.animatedScroll}get progress(){return 0===this.limit?1:this.scroll/this.limit}get isScrolling(){return this.__isScrolling}set isScrolling(t){this.__isScrolling!==t&&(this.__isScrolling=t,this.updateClassName())}get isStopped(){return this.__isStopped}set isStopped(t){this.__isStopped!==t&&(this.__isStopped=t,this.updateClassName())}get isLocked(){return this.__isLocked}set isLocked(t){this.__isLocked!==t&&(this.__isLocked=t,this.updateClassName())}get isSmooth(){return\"smooth\"===this.isScrolling}get className(){let t=\"lenis\";return this.isStopped&&(t+=\" lenis-stopped\"),this.isLocked&&(t+=\" lenis-locked\"),this.isScrolling&&(t+=\" lenis-scrolling\"),\"smooth\"===this.isScrolling&&(t+=\" lenis-smooth\"),t}updateClassName(){this.cleanUpClassName(),this.rootElement.className=`${this.rootElement.className} ${this.className}`.trim()}cleanUpClassName(){this.rootElement.className=this.rootElement.className.replace(/lenis(-\\w+)?/g,\"\").trim()}}export{Lenis as default};\n//# sourceMappingURL=lenis.mjs.map\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { CursorContext } from './CursorContext';\r\n\r\n// Styling\r\nimport '../css/cursor.scss';\r\n\r\n\r\nconst CustomCursor = () => {\r\n  const { hovering } = useContext(CursorContext);\r\n  const [position, setPosition] = useState({ x: 0, y: 0 });\r\n\r\n  useEffect(() => {\r\n    const handleMouseMove = (e) => {\r\n      setPosition({ x: e.clientX, y: e.clientY });\r\n    };\r\n\r\n    window.addEventListener('mousemove', handleMouseMove);\r\n\r\n    return () => {\r\n      window.removeEventListener('mousemove', handleMouseMove);\r\n    };\r\n    \r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={`custom-cursor ${hovering ? 'hovering' : ''}`}\r\n      style={{ top: `${position.y}px`, left: `${position.x}px` }}\r\n    >\r\n      {hovering && <img src={hovering} alt=\"cursor-image\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default CustomCursor;","import React, { useEffect } from 'react';\r\nimport Lenis from 'lenis';\r\nimport CustomCursor from \"./Cursor\";\r\nimport { CursorProvider } from './CursorContext';\r\n\r\n// Styling\r\nimport \"../css/layout.scss\";\r\nimport { Link } from 'gatsby';\r\n\r\n\r\nconst Layout = ({ pageTitle, children }) => {\r\n  useEffect(() => {\r\n    const lenis = new Lenis()\r\n\r\n    function raf(time) {\r\n      lenis.raf(time)\r\n      requestAnimationFrame(raf)\r\n    }\r\n\r\n    requestAnimationFrame(raf)\r\n  }, []);\r\n\r\n  return (\r\n    <CursorProvider>\r\n      <CustomCursor />\r\n      <div className='app-container'>\r\n        <p className='icon'>\r\n          <Link to='/'>justin</Link>\r\n        </p>\r\n        <p>{pageTitle}</p>\r\n        <main>\r\n          {children}\r\n        </main>\r\n        <nav className='botnav'>\r\n          <p>Justin Koo @ 2024</p>\r\n          <div className='socials'>\r\n            <p>Contact: </p>\r\n            <a href='https://www.linkedin.com/in/koo-justin/' target='_blank'>LinkedIn</a>\r\n            <a href='https://github.com/jhtkoo0426/' target='_blank'>GitHub</a>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </CursorProvider>\r\n  )\r\n};\r\n\r\n\r\nexport default Layout;","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nlet scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            if (!scheduleHandoffComplete) {\n                scheduleHandoffComplete = true;\n                queueMicrotask(completeHandoff);\n            }\n        }\n    });\n    return visualElement;\n}\nfunction completeHandoff() {\n    window.HandoffComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        scheduleRender: () => visualElement.scheduleRender(),\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\nfunction isNullish(v) {\n    return v == null;\n}\n\nexport { colorRegex, floatRegex, isNullish, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    /**\n     * If the willChange style has been manually set as a string, set\n     * applyWillChange to false to prevent it from automatically being applied.\n     */\n    if (visualElement && style && typeof style.willChange === \"string\") {\n        visualElement.applyWillChange = false;\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { acceleratedValues } from '../../animation/animators/utils/accelerated-values.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction getWillChangeName(name) {\n    if (transformProps.has(name)) {\n        return \"transform\";\n    }\n    else if (acceleratedValues.has(name) ||\n        // Manually check for backgroundColor as accelerated animations\n        // are currently disabled for this value (see `acceleratedValues`)\n        // but can still be put on the compositor.\n        name === \"backgroundColor\") {\n        return camelToDash(name);\n    }\n}\n\nexport { getWillChangeName };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { getWillChangeName } from '../../value/use-will-change/get-will-change-name.mjs';\nimport { addUniqueItem } from '../../utils/array.mjs';\n\nfunction makeState({ applyWillChange = false, scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext, isStatic) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, isStatic ? false : applyWillChange, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext, isStatic);\n    return isStatic ? make() : useConstant(make);\n};\nfunction addWillChange(willChange, name) {\n    const memberName = getWillChangeName(name);\n    if (memberName) {\n        addUniqueItem(willChange, memberName);\n    }\n}\nfunction forEachDefinition(props, definition, callback) {\n    const list = Array.isArray(definition) ? definition : [definition];\n    for (let i = 0; i < list.length; i++) {\n        const resolved = resolveVariantFromProps(props, list[i]);\n        if (resolved) {\n            const { transitionEnd, transition, ...target } = resolved;\n            callback(target, transitionEnd);\n        }\n    }\n}\nfunction makeLatestValues(props, context, presenceContext, shouldApplyWillChange, scrapeMotionValues) {\n    var _a;\n    const values = {};\n    const willChange = [];\n    const applyWillChange = shouldApplyWillChange && ((_a = props.style) === null || _a === void 0 ? void 0 : _a.willChange) === undefined;\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n        // If a value is an externally-provided motion value, add it to will-change\n        if (applyWillChange) {\n            addWillChange(willChange, key);\n        }\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        forEachDefinition(props, variantToSet, (target, transitionEnd) => {\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd) {\n                values[key] = transitionEnd[key];\n            }\n        });\n    }\n    // Add animating values to will-change\n    if (applyWillChange) {\n        if (animate && initial !== false && !isAnimationControls(animate)) {\n            forEachDefinition(props, animate, (target) => {\n                for (const key in target) {\n                    addWillChange(willChange, key);\n                }\n            });\n        }\n        if (willChange.length) {\n            values.willChange = willChange.join(\",\");\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        applyWillChange: true,\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, isNullish, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff, \n/**\n * Currently used to remove values from will-change when an animation ends.\n * Preferably this would be handled by event listeners on the MotionValue\n * but these aren't consistent enough yet when considering the different ways\n * an animation can be cancelled.\n */\nonEnd) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n            onEnd && onEnd();\n        },\n        onStop: onEnd,\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.3.0\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.getProps()[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { MotionValue } from '../index.mjs';\nimport { getWillChangeName } from './get-will-change-name.mjs';\nimport { removeItem } from '../../utils/array.mjs';\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.output = [];\n        this.counts = new Map();\n    }\n    add(name) {\n        const styleName = getWillChangeName(name);\n        if (!styleName)\n            return;\n        /**\n         * Update counter. Each value has an indepdent counter\n         * as multiple sources could be requesting the same value\n         * gets added to will-change.\n         */\n        const prevCount = this.counts.get(styleName) || 0;\n        this.counts.set(styleName, prevCount + 1);\n        if (prevCount === 0) {\n            this.output.push(styleName);\n            this.update();\n        }\n        /**\n         * Prevents the remove function from being called multiple times.\n         */\n        let hasRemoved = false;\n        return () => {\n            if (hasRemoved)\n                return;\n            hasRemoved = true;\n            const newCount = this.counts.get(styleName) - 1;\n            this.counts.set(styleName, newCount);\n            if (newCount === 0) {\n                removeItem(this.output, styleName);\n                this.update();\n            }\n        };\n    }\n    update() {\n        this.set(this.output.length ? this.output.join(\", \") : \"auto\");\n    }\n}\nfunction useWillChange() {\n    return useConstant(() => new WillChangeMotionValue(\"auto\"));\n}\n\nexport { WillChangeMotionValue, useWillChange };\n","import { WillChangeMotionValue } from './index.mjs';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    var _a;\n    if (!visualElement.applyWillChange)\n        return;\n    let willChange = visualElement.getValue(\"willChange\");\n    /**\n     * If we haven't created a willChange MotionValue, and the we haven't been\n     * manually provided one, create one.\n     */\n    if (!willChange && !((_a = visualElement.props.style) === null || _a === void 0 ? void 0 : _a.willChange)) {\n        willChange = new WillChangeMotionValue(\"auto\");\n        visualElement.addValue(\"willChange\", willChange);\n    }\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff, addValueToWillChange(visualElement, key)));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n            this.removeWillChange = addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        var _a;\n        (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false, addValueToWillChange(this.visualElement, axis)));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction isOptimisedAppearTree(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return false;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement) {\n        return false;\n    }\n    else if (getOptimisedAppearId(visualElement)) {\n        return true;\n    }\n    else if (projectionNode.parent &&\n        !projectionNode.parent.hasCheckedOptimisedAppear) {\n        return isOptimisedAppearTree(projectionNode.parent);\n    }\n    else {\n        return false;\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.HandoffCancelAllAnimations &&\n                isOptimisedAppearTree(this)) {\n                window.HandoffCancelAllAnimations();\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.3.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.3.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import * as React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport { motion } from \"framer-motion\"\r\nimport { Link } from \"gatsby\";\r\nimport Seo from \"../components/seo\"\r\n\r\n// Styling\r\nimport \"../css/404.scss\";\r\n\r\n// Framer motion variants\r\nconst messageVariant = {\r\n  hidden: {\r\n    opacity: 0,\r\n    y: 100,\r\n  },\r\n  visible: {\r\n    opacity: 1,\r\n    y: 0,\r\n    transition: { duration: 1 }\r\n  }\r\n};\r\n\r\n\r\nconst NotFoundPage = () => (\r\n  <div className='container-404'>\r\n    <p className='icon'>\r\n      <Link to='/'>justin</Link>\r\n    </p>    \r\n    <motion.div initial=\"hidden\" animate=\"visible\" variants={messageVariant} className=\"message\">\r\n      <p>Empty canvas hmmm.</p>\r\n      <p>That's how we like to start.</p>\r\n    </motion.div>\r\n  </div>\r\n)\r\n\r\n\r\nexport const Head = () => <Seo title=\"Justin Koo - Portfolio\" />\r\nexport default NotFoundPage"],"names":["CursorContext","createContext","CursorProvider","children","hovering","setHovering","useState","Provider","value","clamp","t","i","e","Math","max","min","Animate","constructor","this","isRunning","from","to","duration","currentTime","advance","easing","s","lerp","exp","round","stop","onUpdate","call","fromTo","o","onStart","n","l","Dimensions","wrapper","content","autoResize","debounce","width","height","scrollWidth","scrollHeight","resize","onWrapperResize","onContentResize","window","innerWidth","innerHeight","HTMLElement","clientWidth","clientHeight","debouncedResize","arguments","clearTimeout","setTimeout","apply","addEventListener","wrapperResizeObserver","ResizeObserver","observe","contentResizeObserver","destroy","disconnect","removeEventListener","limit","x","y","Emitter","events","emit","length","on","push","filter","off","VirtualScroll","wheelMultiplier","touchMultiplier","lastDelta","windowWidth","windowHeight","onTouchStart","clientX","clientY","targetTouches","touchStart","emitter","deltaX","deltaY","event","onTouchMove","r","h","onTouchEnd","onWheel","deltaMode","onWindowResize","element","passive","Lenis","document","documentElement","wheelEventsTarget","eventsTarget","smoothWheel","syncTouch","syncTouchLerp","touchInertiaMultiplier","a","pow","c","infinite","d","orientation","u","gestureOrientation","p","m","v","g","prevent","w","virtualScroll","S","__experimental__naiveDimensions","f","__isScrolling","__isStopped","__isLocked","userData","lastVelocity","velocity","direction","onPointerDown","button","reset","onVirtualScroll","options","ctrlKey","type","includes","isTouching","isStopped","isLocked","composedPath","slice","indexOf","rootElement","find","Element","hasAttribute","classList","contains","preventDefault","isScrolling","animate","abs","scrollTo","targetScroll","Object","assign","programmatic","onNativeScroll","__resetVelocityTimeout","__preventNextNativeScrollEvent","animatedScroll","actualScroll","sign","lenisVersion","body","dimensions","updateClassName","time","cleanUpClassName","setScroll","isHorizontal","scrollLeft","scrollTop","start","raf","offset","immediate","lock","onComplete","force","querySelector","nodeType","getBoundingClientRect","left","top","scroll","preventNextNativeScrollEvent","requestAnimationFrame","progress","isSmooth","className","trim","replace","useContext","position","setPosition","useEffect","handleMouseMove","style","src","alt","pageTitle","lenis","Link","href","target","description","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","property","author","MotionConfigContext","transformPagePoint","isStatic","reducedMotion","MotionContext","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","LazyContext","strict","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","Queue","order","scheduled","Set","add","process","has","remove","index","splice","delete","clear","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","key","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","keepAlive","addToCurrentFrame","queue","cancel","frameData","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","microtask","cancelMicrotask","queueMicrotask","isRefObject","ref","prototype","hasOwnProperty","SwitchLayoutGroupContext","scheduleHandoffComplete","useVisualElement","Component","visualState","props","createVisualElement","ProjectionNodeConstructor","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","initial","initialLayoutGroupConfig","projection","initialPromotionConfig","layoutId","layout","drag","dragConstraints","layoutScroll","layoutRoot","latestValues","undefined","getClosestProjectingNode","setOptions","alwaysMeasureLayout","Boolean","scheduleRender","animationType","createProjectionNode","useInsertionEffect","wantsHandoff","HandoffComplete","updateFeatures","animationState","animateChanges","completeHandoff","allowProjection","useMotionRef","externalRef","useCallback","instance","mount","unmount","isVariantLabel","Array","isArray","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","some","isVariantNode","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","focus","hover","tap","pan","inView","featureDefinitions","isEnabled","LayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","jsx","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","getValueAsType","transform","number","parse","parseFloat","alpha","scale","default","sanitize","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","size","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","transformString","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","styleProp","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","willChange","applyWillChange","charAt","toUpperCase","substring","getValueState","forEach","resolveVariantFromProps","definition","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","acceleratedValues","getWillChangeName","addUniqueItem","arr","item","removeItem","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","addWillChange","memberName","forEachDefinition","list","resolved","transitionEnd","transition","shouldApplyWillChange","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","valueTarget","noop","any","cancelFrame","svgMotionConfig","getBBox","tagName","htmlMotionConfig","addDomEvent","eventName","handler","isPrimaryPointer","pointerType","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","b","pipe","transformers","createLock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","clearTime","newTime","isZeroValueString","warning","invariant","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","testValueType","dimensionValueTypes","findDimensionValueType","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","motionValue","isAsync","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","isNullish","splitColor","aName","bName","cName","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","memo","result","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","hasAttemptedResolve","updateFinishedPromise","_resolved","onKeyframesResolved","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","static","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","catch","getAll","propName","setAll","newValue","cancelAll","prevProgress","onFrame","observeTimeline","cancelTimeline","methodName","controls","animateMotionValue","isHandoff","onEnd","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","supports","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","setMotionValue","hasValue","addValue","getOptimisedAppearId","WillChangeMotionValue","counts","styleName","prevCount","hasRemoved","newCount","addValueToWillChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","checkVariantsDidChange","createTypeState","prevResolvedValues","createState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","createAnimationState","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","removeWillChange","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","isOptimisedAppearTree","projectionNode","hasCheckedOptimisedAppear","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","HandoffCancelAllAnimations","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","HTMLProjectionNode","documentNode","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","numVariantProps","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","messageVariant","hidden","visible","Head","div"],"sourceRoot":""}