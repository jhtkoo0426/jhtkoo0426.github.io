{"version":3,"file":"component---src-pages-404-js-455e85f8a1029cee9679.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/use-will-change/get-will-change-name.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/use-will-change/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://gatsby-starter-default/./src/pages/404.js"],"sourcesContent":["/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nlet scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            if (!scheduleHandoffComplete) {\n                scheduleHandoffComplete = true;\n                queueMicrotask(completeHandoff);\n            }\n        }\n    });\n    return visualElement;\n}\nfunction completeHandoff() {\n    window.HandoffComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        scheduleRender: () => visualElement.scheduleRender(),\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\nfunction isNullish(v) {\n    return v == null;\n}\n\nexport { colorRegex, floatRegex, isNullish, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    /**\n     * If the willChange style has been manually set as a string, set\n     * applyWillChange to false to prevent it from automatically being applied.\n     */\n    if (visualElement && style && typeof style.willChange === \"string\") {\n        visualElement.applyWillChange = false;\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { acceleratedValues } from '../../animation/animators/utils/accelerated-values.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction getWillChangeName(name) {\n    if (transformProps.has(name)) {\n        return \"transform\";\n    }\n    else if (acceleratedValues.has(name) ||\n        // Manually check for backgroundColor as accelerated animations\n        // are currently disabled for this value (see `acceleratedValues`)\n        // but can still be put on the compositor.\n        name === \"backgroundColor\") {\n        return camelToDash(name);\n    }\n}\n\nexport { getWillChangeName };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { getWillChangeName } from '../../value/use-will-change/get-will-change-name.mjs';\nimport { addUniqueItem } from '../../utils/array.mjs';\n\nfunction makeState({ applyWillChange = false, scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext, isStatic) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, isStatic ? false : applyWillChange, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext, isStatic);\n    return isStatic ? make() : useConstant(make);\n};\nfunction addWillChange(willChange, name) {\n    const memberName = getWillChangeName(name);\n    if (memberName) {\n        addUniqueItem(willChange, memberName);\n    }\n}\nfunction forEachDefinition(props, definition, callback) {\n    const list = Array.isArray(definition) ? definition : [definition];\n    for (let i = 0; i < list.length; i++) {\n        const resolved = resolveVariantFromProps(props, list[i]);\n        if (resolved) {\n            const { transitionEnd, transition, ...target } = resolved;\n            callback(target, transitionEnd);\n        }\n    }\n}\nfunction makeLatestValues(props, context, presenceContext, shouldApplyWillChange, scrapeMotionValues) {\n    var _a;\n    const values = {};\n    const willChange = [];\n    const applyWillChange = shouldApplyWillChange && ((_a = props.style) === null || _a === void 0 ? void 0 : _a.willChange) === undefined;\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n        // If a value is an externally-provided motion value, add it to will-change\n        if (applyWillChange) {\n            addWillChange(willChange, key);\n        }\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        forEachDefinition(props, variantToSet, (target, transitionEnd) => {\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd) {\n                values[key] = transitionEnd[key];\n            }\n        });\n    }\n    // Add animating values to will-change\n    if (applyWillChange) {\n        if (animate && initial !== false && !isAnimationControls(animate)) {\n            forEachDefinition(props, animate, (target) => {\n                for (const key in target) {\n                    addWillChange(willChange, key);\n                }\n            });\n        }\n        if (willChange.length) {\n            values.willChange = willChange.join(\",\");\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        applyWillChange: true,\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, isNullish, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff, \n/**\n * Currently used to remove values from will-change when an animation ends.\n * Preferably this would be handled by event listeners on the MotionValue\n * but these aren't consistent enough yet when considering the different ways\n * an animation can be cancelled.\n */\nonEnd) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n            onEnd && onEnd();\n        },\n        onStop: onEnd,\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.3.0\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.getProps()[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { MotionValue } from '../index.mjs';\nimport { getWillChangeName } from './get-will-change-name.mjs';\nimport { removeItem } from '../../utils/array.mjs';\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.output = [];\n        this.counts = new Map();\n    }\n    add(name) {\n        const styleName = getWillChangeName(name);\n        if (!styleName)\n            return;\n        /**\n         * Update counter. Each value has an indepdent counter\n         * as multiple sources could be requesting the same value\n         * gets added to will-change.\n         */\n        const prevCount = this.counts.get(styleName) || 0;\n        this.counts.set(styleName, prevCount + 1);\n        if (prevCount === 0) {\n            this.output.push(styleName);\n            this.update();\n        }\n        /**\n         * Prevents the remove function from being called multiple times.\n         */\n        let hasRemoved = false;\n        return () => {\n            if (hasRemoved)\n                return;\n            hasRemoved = true;\n            const newCount = this.counts.get(styleName) - 1;\n            this.counts.set(styleName, newCount);\n            if (newCount === 0) {\n                removeItem(this.output, styleName);\n                this.update();\n            }\n        };\n    }\n    update() {\n        this.set(this.output.length ? this.output.join(\", \") : \"auto\");\n    }\n}\nfunction useWillChange() {\n    return useConstant(() => new WillChangeMotionValue(\"auto\"));\n}\n\nexport { WillChangeMotionValue, useWillChange };\n","import { WillChangeMotionValue } from './index.mjs';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    var _a;\n    if (!visualElement.applyWillChange)\n        return;\n    let willChange = visualElement.getValue(\"willChange\");\n    /**\n     * If we haven't created a willChange MotionValue, and the we haven't been\n     * manually provided one, create one.\n     */\n    if (!willChange && !((_a = visualElement.props.style) === null || _a === void 0 ? void 0 : _a.willChange)) {\n        willChange = new WillChangeMotionValue(\"auto\");\n        visualElement.addValue(\"willChange\", willChange);\n    }\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff, addValueToWillChange(visualElement, key)));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n            this.removeWillChange = addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        var _a;\n        (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false, addValueToWillChange(this.visualElement, axis)));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction isOptimisedAppearTree(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return false;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement) {\n        return false;\n    }\n    else if (getOptimisedAppearId(visualElement)) {\n        return true;\n    }\n    else if (projectionNode.parent &&\n        !projectionNode.parent.hasCheckedOptimisedAppear) {\n        return isOptimisedAppearTree(projectionNode.parent);\n    }\n    else {\n        return false;\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.HandoffCancelAllAnimations &&\n                isOptimisedAppearTree(this)) {\n                window.HandoffCancelAllAnimations();\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.3.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.3.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import * as React from \"react\"\r\nimport { motion } from \"framer-motion\"\r\nimport { Link } from \"gatsby\";\r\nimport Seo from \"../components/seo\"\r\n\r\n// Styling\r\nimport \"../css/404.scss\";\r\n\r\n// Framer motion variants\r\nconst messageVariant = {\r\n  hidden: {\r\n    opacity: 0,\r\n    y: 100,\r\n  },\r\n  visible: {\r\n    opacity: 1,\r\n    y: 0,\r\n    transition: { duration: 1 }\r\n  }\r\n};\r\n\r\n\r\nconst NotFoundPage = () => (\r\n  <div className='container-404'>\r\n    <p className='icon'>\r\n      <Link to='/'>justin</Link>\r\n    </p>    \r\n    <motion.div initial=\"hidden\" animate=\"visible\" variants={messageVariant} className=\"message\">\r\n      <p>Empty canvas hmmm.</p>\r\n      <p>That's how we like to start.</p>\r\n    </motion.div>\r\n  </div>\r\n)\r\n\r\n\r\nexport const Head = () => <Seo title=\"Justin Koo - Portfolio\" />\r\nexport default NotFoundPage"],"names":["description","title","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","Queue","constructor","this","order","scheduled","Set","add","process","has","push","remove","index","indexOf","splice","delete","clear","length","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","key","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","keepAlive","immediate","addToCurrentFrame","queue","cancel","frameData","i","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","Math","max","min","microtask","cancelMicrotask","queueMicrotask","isRefObject","ref","Object","prototype","hasOwnProperty","call","SwitchLayoutGroupContext","scheduleHandoffComplete","useVisualElement","Component","visualState","props","createVisualElement","ProjectionNodeConstructor","visualElement","parent","useContext","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","initial","initialLayoutGroupConfig","projection","type","initialPromotionConfig","layoutId","layout","drag","dragConstraints","layoutScroll","layoutRoot","latestValues","undefined","getClosestProjectingNode","setOptions","alwaysMeasureLayout","Boolean","scheduleRender","animationType","createProjectionNode","useInsertionEffect","wantsHandoff","window","HandoffComplete","updateFeatures","animationState","animateChanges","completeHandoff","options","allowProjection","useMotionRef","externalRef","useCallback","instance","mount","unmount","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","isVariantNode","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","focus","hover","tap","pan","inView","featureDefinitions","isEnabled","LayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","value","jsx","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","transformString","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","element","styleProp","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","willChange","applyWillChange","charAt","toUpperCase","substring","getValueState","forEach","resolveVariantFromProps","definition","velocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","acceleratedValues","getWillChangeName","addUniqueItem","arr","item","removeItem","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","addWillChange","memberName","forEachDefinition","list","resolved","transitionEnd","transition","shouldApplyWillChange","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","valueTarget","noop","any","cancelFrame","requestAnimationFrame","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","filter","clearTime","time","newTime","isZeroValueString","warning","invariant","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","isNullish","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","memo","result","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","teardown","onStop","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Element","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","static","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","catch","getAll","propName","setAll","newValue","cancelAll","prevProgress","onFrame","observeTimeline","cancelTimeline","methodName","controls","animateMotionValue","isHandoff","onEnd","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","supports","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","getOptimisedAppearId","WillChangeMotionValue","counts","styleName","prevCount","hasRemoved","newCount","addValueToWillChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","checkVariantsDidChange","createTypeState","prevResolvedValues","createState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","reset","createAnimationState","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","removeWillChange","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","isOptimisedAppearTree","projectionNode","hasCheckedOptimisedAppear","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","HandoffCancelAllAnimations","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","numVariantProps","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","messageVariant","hidden","visible","Head","className","Link","div"],"sourceRoot":""}